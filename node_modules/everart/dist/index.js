"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const V1Generations = __importStar(require("./v1/generations"));
const V1Images = __importStar(require("./v1/images"));
const V1Models = __importStar(require("./v1/models"));
const V1Predictions = __importStar(require("./v1/predictions"));
class EverArt {
    constructor(apiKey) {
        this.apiKey = apiKey;
    }
    get defaultHeaders() {
        return {
            Authorization: `Bearer ${this.apiKey}`,
            'Content-Type': 'application/json',
        };
    }
    get v1() {
        return {
            generations: {
                create: (...args) => V1Generations.create.bind(this)(...args),
                fetch: (...args) => V1Generations.fetch.bind(this)(...args),
                fetchWithPolling: (...args) => V1Generations.fetchWithPolling.bind(this)(...args),
            },
            images: {
                uploads: (...args) => V1Images.uploads.bind(this)(...args),
            },
            models: {
                fetch: (...args) => V1Models.fetch.bind(this)(...args),
                fetchMany: (...args) => V1Models.fetchMany.bind(this)(...args),
                create: (...args) => V1Models.create.bind(this)(...args),
            },
            /**
             * @deprecated Use generations instead. This will be removed in a future version.
             */
            predictions: {
                create: (...args) => V1Predictions.create.bind(this)(...args),
                fetch: (...args) => V1Predictions.fetch.bind(this)(...args),
                fetchWithPolling: (...args) => V1Predictions.fetchWithPolling.bind(this)(...args),
            },
        };
    }
}
exports.default = EverArt;
//# sourceMappingURL=index.js.map